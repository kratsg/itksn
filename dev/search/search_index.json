{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"itksn","text":"CI/CD Docs Package Meta <p>itksn is a tool used to parse (and build) serial numbers for the ATLAS ITk project documented at itk.docs.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Multiple components supported</li> <li>Easy to contribute and extend</li> <li>Usable CLI</li> </ul>"},{"location":"#license","title":"License","text":"<p>itksn is distributed under the terms of the BSD-3 license.</p>"},{"location":"#navigation","title":"Navigation","text":"<p>Documentation for specific <code>MAJOR.MINOR</code> versions can be chosen by using the dropdown on the top of every page. The <code>dev</code> version reflects changes that have not yet been released.</p> <p>Also, desktop readers can use special keyboard shortcuts:</p> Keys Action <ul><li>, (comma)</li><li>p</li></ul> Navigate to the \"previous\" page <ul><li>. (period)</li><li>n</li></ul> Navigate to the \"next\" page <ul><li>/</li><li>s</li></ul> Display the search modal"},{"location":"install/","title":"Installation","text":""},{"location":"install/#pip","title":"pip","text":"<p>itksn is available on PyPI and can be installed with pip.</p> <pre><code>pip install itksn\n</code></pre> <p>Warning</p> <p>This method modifies the Python environment in which you choose to install. Consider instead using pipx or virtual environments to avoid dependency conflicts.</p>"},{"location":"install/#pipx","title":"pipx","text":"<p>pipx allows for the global installation of Python applications in isolated environments.</p> <pre><code>pipx install itksn\n</code></pre>"},{"location":"install/#virtual-environment","title":"virtual environment","text":"<pre><code>python -m venv venv\nsource venv/bin/activate\npython -m pip install itksn\n</code></pre>"},{"location":"install/#conda","title":"Conda","text":"<p>See the feedstock for more details.</p> <pre><code>conda install -c conda-forge itksn\n</code></pre> <p>or with mamba:</p> <pre><code>mamba install itksn\n</code></pre> <p>Warning</p> <p>This method modifies the Conda environment in which you choose to install. Consider instead using pipx or condax to avoid dependency conflicts.</p>"},{"location":"cli/about/","title":"About","text":""},{"location":"cli/reference/","title":"Reference","text":""},{"location":"cli/reference/#itksn","title":"itksn","text":"<p>Manage top-level options</p> <p>Usage:</p> <pre><code>itksn [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --version                       Print the current version.\n  --install-completion [bash|zsh|fish|powershell|pwsh]\n                                  Install completion for the specified shell.\n  --show-completion [bash|zsh|fish|powershell|pwsh]\n                                  Show completion for the specified shell, to\n                                  copy it or customize the installation.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"cli/reference/#itksn-parse","title":"itksn parse","text":"<p>Parse the provided serial number.</p> <p>Usage:</p> <pre><code>itksn parse [OPTIONS] SERIALNUMBER\n</code></pre> <p>Options:</p> <pre><code>  SERIALNUMBER  [required]\n  --help        Show this message and exit.\n</code></pre>"},{"location":"meta/authors/","title":"Authors","text":""},{"location":"meta/authors/#maintainers","title":"Maintainers","text":"<ul> <li>Giordon Stark  </li> </ul>"},{"location":"meta/authors/#contributors","title":"Contributors","text":"<ul> <li>Be Our First!</li> </ul>"},{"location":"meta/faq/","title":"FAQ","text":""},{"location":"meta/faq/#potpourri","title":"Potpourri","text":"<p>Q: Why is the FAQ empty?</p> <p>A: We're still working on fleshing it out. Check back soon. In the meantime, open a discussion or file an issue.</p>"},{"location":"reference/itksn/","title":"itksn","text":""},{"location":"reference/itksn/#itksn","title":"itksn","text":""},{"location":"reference/itksn/common/","title":"common","text":""},{"location":"reference/itksn/common/#itksn.common","title":"common","text":""},{"location":"reference/itksn/common/#itksn.common.EnumByteString","title":"EnumByteString","text":"<p>         Bases: <code>str</code></p> <p>Like EnumIntegerString but for Bytes.</p>"},{"location":"reference/itksn/common/#itksn.common.EnumByteString.new","title":"new  <code>staticmethod</code>","text":"<pre><code>new(bytevalue: bytes, stringvalue: str) -&gt; EnumByteString\n</code></pre> <p>Create EnumByteString object as a class constructor</p> Source code in <code>itksn/common.py</code> <pre><code>@staticmethod\ndef new(bytevalue: bytes, stringvalue: str) -&gt; EnumByteString:\n\"\"\"\n    Create EnumByteString object as a class constructor\n    \"\"\"\nret = EnumByteString(stringvalue)\nret.bytevalue = bytevalue\nreturn ret\n</code></pre>"},{"location":"reference/itksn/common/#itksn.common.EnumStr","title":"EnumStr","text":"<pre><code>EnumStr(subcon: Construct[bytes, bytes], **mapping: bytes) -&gt; None\n</code></pre> <p>         Bases: <code>TheAdapter</code></p> <p>This is exactly the same as construct.Enum, but supports byte subcons.</p> Source code in <code>itksn/common.py</code> <pre><code>def __init__(self: Self, subcon: Construct[bytes, bytes], **mapping: bytes) -&gt; None:\nsuper().__init__(subcon)\nself.encmapping: dict[str, bytes] = {\nEnumByteString.new(v, k): v for k, v in mapping.items()\n}\nself.decmapping: dict[bytes, EnumByteString] = {\nv: EnumByteString.new(v, k) for k, v in mapping.items()\n}\nself.ksymapping: dict[bytes, str] = {v: k for k, v in mapping.items()}\n</code></pre>"},{"location":"reference/itksn/core/","title":"core","text":""},{"location":"reference/itksn/core/#itksn.core","title":"core","text":""},{"location":"reference/itksn/pixels/","title":"pixels","text":""},{"location":"reference/itksn/pixels/#itksn.pixels","title":"pixels","text":""}]}